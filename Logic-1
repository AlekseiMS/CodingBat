/*
twoAsOne
Given three ints, a b c, return true if it is possible to add two of the ints to get the third.

twoAsOne(1, 2, 3) → true
twoAsOne(3, 1, 2) → true
twoAsOne(3, 2, 2) → false
*/

public boolean twoAsOne(int a, int b, int c) {
 if (a + b == c || c + b == a || a + c == b){
 return true;
 }
 return false;
}

/*
 inOrder
Given three ints, a b c, return true if b is greater than a, and c is greater than b. However, with the exception that if "bOk" is true,
b does not need to be greater than a.

inOrder(1, 2, 4, false) → true
inOrder(1, 2, 1, false) → false
inOrder(1, 1, 2, true) → true
*/

public boolean inOrder(int a, int b, int c, boolean bOk) {
  if (b > a && c > b || bOk == true && c > b) {
    return true;
  }
  return false;
}

/*
*/
